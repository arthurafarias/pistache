language: cpp

branches:
  only:
    - master

matrix:
  include:

  - os: linux
    dist: trusty
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=3.6

  - os: linux
    dist: trusty
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=3.8

  - os: linux
    dist: trusty
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=3.9

  - os: linux
    dist: trusty
    compiler: gcc
    env:
      - COMPILER_NAME=gcc
      - COMPILER_VERSION=4.4

  - os: linux
    dist: trusty
    compiler: gcc
    env:
      - COMPILER_NAME=gcc
      - COMPILER_VERSION=4.6

  - os: linux
    dist: trusty
    compiler: gcc
    env:
      - COMPILER_NAME=gcc
      - COMPILER_VERSION=4.7

  - os: linux
    dist: trusty
    compiler: gcc
    env:
      - COMPILER_NAME=gcc
      - COMPILER_VERSION=4.8

  - os: linux
    dist: xenial
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=3.5

  - os: linux
    dist: xenial
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=3.6

  - os: linux
    dist: xenial
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=3.7

  - os: linux
    dist: xenial
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=3.8

  - os: linux
    dist: xenial
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=4.0

  - os: linux
    dist: xenial
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=5.0

  - os: linux
    dist: xenial
    compiler: clang
    env:
      - COMPILER_NAME=clang
      - COMPILER_VERSION=6.0

  - os: linux
    dist: xenial
    compiler: gcc
    env:
      - COMPILER_NAME=gcc
      - COMPILER_VERSION=4.7

  - os: linux
    dist: xenial
    compiler: gcc
    env:
      - COMPILER_NAME=gcc
      - COMPILER_VERSION=4.8

  - os: linux
    dist: xenial
    compiler: gcc
    env:
      - COMPILER_NAME=gcc
      - COMPILER_VERSION=4.9

before_script:
  # Bootraping environment and required packages
  - . bootstrap-env.bash
  - ./bootstrap.bash

script:
  # Debug build
  - cd build/debug
  - make -j $(nproc) all test ARGS="-V"

  # Release build
  - cd ../build/release
  - make -j $(nproc)

after_failure:
  - ls -lta /var/crash
  - COREFILE=$(find ./ -maxdepth 1 -name "core*" -print | head -n 1) 
  - if [[ -f "$COREFILE" ]]; then
    gdb -c "$COREFILE" -ex "thread apply all bt" -ex "set pagination 0" -batch;
    fi


after_success:
- cd ../build/debug
- sudo su -c "echo 'if [ \"\$1\" = \"-v\" ] ; then $COV_TOOL --version ; else $COV_TOOL $COV_TOOL_ARGS \$@ ; fi' > /usr/local/bin/cov-tool" && sudo chmod +x /usr/local/bin/cov-tool
- lcov --capture --gcov-tool cov-tool --directory . --output-file coverage.info
- lcov --remove coverage.info '/usr/*' '*tests/*' '*googletest-release-1.7.0/*' --output-file coverage.info
- lcov --list coverage.info
- bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"